find_package(Vulkan)

if (Vulkan_FOUND)
    message("Vulkan found")
    add_library(vk_runtime STATIC vk_runtime.c vk_runtime_device.c vk_runtime_program.c vk_runtime_dispatch.c vk_runtime_buffer.c)
    target_link_libraries(vk_runtime PUBLIC api)
    target_link_libraries(vk_runtime PUBLIC shady)
    target_link_libraries(vk_runtime PRIVATE "$<BUILD_INTERFACE:common>")
    target_link_libraries(vk_runtime PRIVATE "$<BUILD_INTERFACE:murmur3>")
    target_link_libraries(vk_runtime PRIVATE Vulkan::Headers Vulkan::Vulkan)
    set_property(TARGET vk_runtime PROPERTY POSITION_INDEPENDENT_CODE ON)
    target_link_libraries(runtime PRIVATE vk_runtime)
    target_compile_definitions(runtime PUBLIC VK_BACKEND_PRESENT=1)
else()
    message("Vulkan not found, runtime component will not be built.")
endif()
