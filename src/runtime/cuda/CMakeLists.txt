find_package(CUDA)

if (CUDA_FOUND)
    message("Cuda found.")
    add_library(cuda_runtime STATIC cuda_runtime.c cuda_runtime_buffer.c cuda_runtime_program.c)
    target_link_libraries(cuda_runtime PUBLIC api)
    target_link_libraries(cuda_runtime PUBLIC shady)
    target_link_libraries(cuda_runtime PRIVATE "$<BUILD_INTERFACE:common>")
    target_link_libraries(cuda_runtime PRIVATE "$<BUILD_INTERFACE:murmur3>")
    target_link_libraries(cuda_runtime PRIVATE CUDA_LIBRARIES)
    set_property(TARGET cuda_runtime PROPERTY POSITION_INDEPENDENT_CODE ON)
    target_link_libraries(runtime PRIVATE cuda_runtime)
    target_compile_definitions(runtime PUBLIC CUDA_BACKEND_PRESENT=1)
endif ()